---
- hosts: all
  become: true
  vars:
    runc_version: "1.1.13"
    containerd_version: "1.7.14"
  tasks:
    - name: Update all packages to the latest version
      apt:
        upgrade: dist
        update_cache: yes
      tags:
        - with-hardening
    - name: Install unattended-upgrades package
      apt:
        name: unattended-upgrades
        state: present
      tags:
        - with-hardening
    - name: Enable automatic security updates
      lineinfile:
        path: /etc/apt/apt.conf.d/20auto-upgrades
        line: 'APT::Periodic::Unattended-Upgrade "1";'
        create: yes
      tags:
        - with-hardening
    - name: Ensure ufw (firewall) is installed
      apt:
        name: ufw
        state: present
      tags:
        - with-hardening
    - name: Allow SSH through firewall
      ufw:
        rule: allow
        port: ssh
      tags:
        - with-hardening
    - name: Allow Kubelet API
      ufw:
        rule: allow
        port: 10250
        proto: tcp
      tags:
        - with-hardening
    - name: Enable firewall
      ufw:
        state: enabled
      tags:
        - with-hardening
    - name: Ensure SSH server config is secure
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^{{ item.name }} '
        line: '{{ item.name }} {{ item.value }}'
      with_items:
        - { name: 'PermitRootLogin', value: 'no' }
        - { name: 'PasswordAuthentication', value: 'no' }
        - { name: 'AllowUsers', value: 'vagrant' }
      tags:
        - with-hardening
    - name: Restart SSH service
      systemd:
        name: ssh
        state: restarted
      tags:
        - with-hardening
    - name: Ensure password hashes are stored securely
      lineinfile:
        path: /etc/login.defs
        regexp: '^ENCRYPT_METHOD'
        line: 'ENCRYPT_METHOD SHA512'
      tags:
        - with-hardening
    - name: Install and configure prerequisites
      shell:
        cmd: |
          cat > /etc/modules-load.d/containerd.conf << EOF
          overlay
          br_netfilter
          EOF
          modprobe overlay
          modprobe br_netfilter
    - name: Setup required sysctl params, these persist across reboots
      shell:
        cmd: |
          cat > /etc/sysctl.d/99-kubernetes-cri.conf <<EOF
          net.bridge.bridge-nf-call-iptables  = 1
          net.ipv4.ip_forward                 = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          EOF
    - name: Apply sysctl params without reboot
      shell:
        cmd: |
          sysctl --system
    - name: Download runc binary
      get_url:
        url: https://github.com/opencontainers/runc/releases/download/v{{ runc_version }}/runc.amd64
        dest: /tmp
    - name: Install runc
      command: "{{ item }} chdir=/tmp"
      with_items:
        - install -m 755 runc.amd64 /usr/local/sbin/runc
    - name: Download containerd binary
      get_url:
        url: https://github.com/containerd/containerd/releases/download/v{{ containerd_version }}/containerd-{{ containerd_version }}-linux-amd64.tar.gz
        dest: /tmp
    - name: Download untar containerd
      unarchive:
        src: /tmp/containerd-{{ containerd_version }}-linux-amd64.tar.gz
        dest: /usr/local
        remote_src: yes
    - name: Download containerd.service
      command: "{{ item }} chdir=/usr/lib/systemd/system"
      with_items:
        - curl -SLO "https://raw.githubusercontent.com/containerd/containerd/main/containerd.service"
    - name: Configure containerd
      shell:
        cmd: |
          mkdir -p /etc/containerd
          containerd config default > /etc/containerd/config.toml
    - name: Enable SystemdCgroup driver https://bit.ly/3L9upJP
      replace:
        path: /etc/containerd/config.toml
        regexp: 'SystemdCgroup = false'
        replace: 'SystemdCgroup = true'
    - name: Restart and enable containerd
      systemd: 
        name: containerd
        state: restarted
        enabled: yes
        daemon-reload: yes
    - name: Remove swapfile from /etc/fstab
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none
    - name: Disable swap
      shell:
        cmd: |
          swapoff -a
      when: ansible_swaptotal_mb > 0
    - name: Add an apt signing key for Kubernetes
      apt_key:
        url: https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key
        state: present
        keyring: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    - name: Adding apt repository for Kubernetes
      apt_repository:
        repo: deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /
        state: present
        filename: kubernetes.list
    - name: Install Kubernetes binaries
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - kubelet
          - kubeadm
          - kubectl
    - name: Configure node ip
      lineinfile:
        path: /etc/default/kubelet
        line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}
        create: yes
    - name: Restart kubelet
      systemd:
        name: kubelet
        state: restarted
        enabled: yes
        daemon_reload: yes
    - name: Copy the join command to server location
      copy:
        src: join-command
        dest: /tmp/join-command.sh
        mode: 777
    - name: Join the node to cluster
      command: sh /tmp/join-command.sh
