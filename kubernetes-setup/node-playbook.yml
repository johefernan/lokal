---
- hosts: all
  become: true
  tasks:
  - name: Install and configure prerequisites
    shell:
      cmd: |
        cat > /etc/modules-load.d/containerd.conf <<EOF
        overlay
        br_netfilter
        EOF
        modprobe overlay
        modprobe br_netfilter

  - name: Setup required sysctl params, these persist across reboots
    shell:
      cmd: |
        cat > /etc/sysctl.d/99-kubernetes-cri.conf <<EOF
        net.bridge.bridge-nf-call-iptables  = 1
        net.ipv4.ip_forward                 = 1
        net.bridge.bridge-nf-call-ip6tables = 1
        EOF

  - name:  Apply sysctl params without reboot
    shell:
      cmd: |
        sysctl --system

  - name: Install containerd
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - containerd

  - name: Configure containerd
    shell:
      cmd: |
        mkdir -p /etc/containerd
        containerd config default > /etc/containerd/config.toml

  - name: Restart containerd
    shell:
      cmd: |
        systemctl restart containerd

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet 
        - kubeadm 
        - kubectl

  - name: Configure node ip
    lineinfile:
      path: /etc/default/kubelet
      line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}
      create: yes

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted

  - name: Copy the join command to server location
    copy: src=join-command dest=/tmp/join-command.sh mode=0777

  - name: Join the node to cluster
    command: sh /tmp/join-command.sh